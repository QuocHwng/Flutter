"""
Django settings for inventory_backend project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv
load_dotenv()
import environ # Đảm bảo bạn đã pip install django-environ

# Khởi tạo django-environ
# Nó sẽ tự động tìm file .env trong thư mục gốc của project nếu có (cho local development)
# Trên Render, nó sẽ đọc từ các biến môi trường của Render.
env = environ.Env(
    # Đặt kiểu và giá trị mặc định cho các biến môi trường
    DEBUG=(bool, False), # Mặc định DEBUG là False cho production
    ALLOWED_HOSTS=(list, []),
    # Các biến cho CSDL nếu không dùng DATABASE_URL
    DB_NAME=(str, 'default_db_name_if_not_set'),
    DB_USER=(str, 'default_db_user_if_not_set'),
    DB_PASSWORD=(str, 'default_db_password_if_not_set'),
    DB_HOST=(str, 'localhost'),
    DB_PORT=(str, '5432'),
    # Các biến AI model paths (có thể để mặc định nếu đường dẫn không thay đổi)
    # Không cần thiết phải đưa tất cả vào env nếu chúng không thay đổi giữa các môi trường
)

# Đọc file .env (nếu có, chủ yếu cho local development)
# File này KHÔNG NÊN commit lên Git nếu chứa thông tin nhạy cảm.
# Render sẽ sử dụng các biến môi trường được thiết lập trên dashboard của nó.
ENV_PATH = os.path.join(Path(__file__).resolve().parent.parent, '.env')
if os.path.exists(ENV_PATH):
    print(f"Reading environment variables from: {ENV_PATH}")
    environ.Env.read_env(ENV_PATH)
else:
    print(f".env file not found at {ENV_PATH}. Using system environment variables or defaults.")



# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY', default='g9e)4y41$33fpd3n!@b@agk)7fzraa#kh&aumu+@=tm)*@tkbg')


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env('DEBUG')

ALLOWED_HOSTS = env.list('ALLOWED_HOSTS', default=['localhost', '127.0.0.1','flutter-demo-k7w0.onrender.com'])



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework_simplejwt',
    'corsheaders', # Thêm corsheaders
    'api',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = 'inventory_backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'inventory_backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': env.db_url(
        'DATABASE_URL', # Tên biến môi trường mà Render sẽ cung cấp
        default=f"postgres://{env('DB_USER')}:{env('DB_PASSWORD')}@{env('DB_HOST')}:{env('DB_PORT')}/{env('DB_NAME')}"
        # Hoặc fallback về SQLite cho local dev đơn giản nhất nếu không muốn cài PostgreSQL local:
        # default=f"sqlite:///{os.path.join(BASE_DIR, 'db.sqlite3')}"
    )
}



# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Ho_Chi_Minh'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# THÊM DÒNG NÀY:
STATIC_ROOT = BASE_DIR / 'staticfiles'
# Hoặc nếu bạn không dùng Pathlib cho BASE_DIR ở trên cùng (mà bạn đang dùng):
# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# (Tùy chọn nhưng được khuyến nghị khi dùng WhiteNoise)
# Để WhiteNoise nén file và tạo tên file duy nhất (cache-busting)
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


CORS_ALLOW_ALL_ORIGINS = True


REST_FRAMEWORK = {
    # 'DEFAULT_AUTHENTICATION_CLASSES': (
    #     'rest_framework_simplejwt.authentication.JWTAuthentication',
    # ),
    # 'DEFAULT_PERMISSION_CLASSES': (
    #     'rest_framework.permissions.IsAuthenticated', # Yêu cầu xác thực cho tất cả API mặc định
    # ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10
}



from datetime import timedelta
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60), # Thời gian sống của access token
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),    # Thời gian sống của refresh token
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': True,
    'UPDATE_LAST_LOGIN': False,

    'ALGORITHM': 'HS256',
    'VERIFYING_KEY': None,
    'AUDIENCE': None,
    'ISSUER': None,

    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',

    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',

    'JTI_CLAIM': 'jti',

    'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
    'SLIDING_TOKEN_LIFETIME': timedelta(minutes=5),
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=1),
}
